version: 2.1

# orbs:
#   node: circleci/node@2.0.2

references:
  restore_installed_cache: &restore_installed_cache
    restore_cache:
      keys:
        - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
        - yarn-packages-v1-{{ .Branch }}-
        - yarn-packages-v1-
        # - yarn-{{ checksum "yarn.lock" }}
        # - yarn-

  save_installed_cache: &save_installed_cache
    save_cache:
      name: Save Yarn Package Cache
      key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      # key: yarn-{{ checksum "yarn.lock" }}
      paths:
        - ~/.cache/yarn
      # paths:
      #   - ./node_modules

  container_config: &container_config
    docker:
      - image: circleci/node:latest-browsers
    working_directory: ~/cio

  restore_repo: &restore_repo
    restore_cache:
      key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}


commands:
  create_service_account_json:
    parameters:
      where:
        type: string
    steps:
      - run:
          name: Create ServiceAccount.json on project root
          command: |
            echo $SERVICE_ACCOUNT | base64 --decode > \
            ${HOME}/<< parameters.where >>/serviceAccount.json
      - run:
          name: Verify ServiceAccount.json creation
          command: cat ${HOME}/<< parameters.where >>/serviceAccount.json


jobs:

  checkout_code:
    <<: *container_config
    steps:
      - *restore_repo
      - checkout
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/cio

  install_dependencies:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_installed_cache
      - run:
          name: Install Packages
          command: yarn install --frozen-lockfile --cache-folder ~.cache/yarn
      - *save_installed_cache

  build_and_deploy_storybook:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_installed_cache
      - run:
          name: Build Storybook
          command: yarn build:storybook
      - run:
          name: Deploy Storybook to Firebase
          command: ./node_modules/.bin/firebase deploy --token "$FIREBASE_DEPLOY_TOKEN" --only hosting:storybook

  build_and_deploy_cio:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_installed_cache
      - run:
          name: Build CIO
          command: yarn build:cio
      - run:
          name: Deploy CIO to Firebase
          command: ./node_modules/.bin/firebase deploy --token "$FIREBASE_DEPLOY_TOKEN" --only hosting:cio


  # build:
  #   <<: *container_config
  #   steps:


      - create_service_account_json:
          where: cio

      # - node/install:
      #     install-yarn: true
      #     node-version: 12.10.0

      # - run:
      #     name: Show Node Version
      #     command: node --version
      # - *restore_installed_cache
      # - run:
      #     name: Show Yarn Version
      #     command: yarn --version
      # - install_package
      # - run:
      #     name: Install Packages
      #     command: yarn install --frozen-lockfile --cache-folder ~.cache/yarn
      # - *save_installed_cache
      # - save_cache:
      #     name: Save Yarn Package Cache
      #     key: yarn-{{ checksum "yarn.lock" }}
      #     paths:
      #       - ~/.cache/yarn



      # - run:
      #     name: Cypress on CIO
      #     command: yarn ci:cy:cio
      # - run:
      #     name: Cypress on Storybook
      #     command: yarn ci:cy:storybook




      # - run:
      #     name: Build CIO
      #     command: yarn build:cio
      # - run:
      #     name: Build Storybook
      #     command: yarn build:storybook
      # - run:
      #     name: Deploy CIO to Firebase
      #     command: ./node_modules/.bin/firebase deploy --token "$FIREBASE_DEPLOY_TOKEN" --only hosting:cio
      # - run:
      #     name: Deploy Storybook to Firebase
      #     command: ./node_modules/.bin/firebase deploy --token "$FIREBASE_DEPLOY_TOKEN" --only hosting:storybook
workflows:
  version: 2
  workflow_name:
    jobs:
      - checkout_code
      - install_dependencies:
          requires:
            - checkout_code
      - build_and_deploy_storybook:
          requires:
            - install_dependencies
          filters:
            branches:
              only: master
      - build_and_deploy_cio:
          requires:
            - install_dependencies
          filters:
            branches:
              only: master
      # - build:
      #     requires:
      #       - checkout_code